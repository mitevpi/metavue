(function(a){"function"==typeof define&&define.amd?define(a):a()})(function(){'use strict';var a={template:`
    <div>
     <h1>MetaVue Data</h1>
     <p>{{ message }}</p>
    </div>
  `,data(){return{message:"Component & Application Analysis"}}},b={template:`
  <div class="chart-container">
    <canvas ref="myChart"></canvas>
  </div>
  `,props:["uniqueComps","values","label"],data(){return{message:"Sample"}},mounted(){this.CreateComponentImportBar()},methods:{CreateComponentImportBar(){const a=this.$refs.myChart.getContext("2d"),b=new Chart(a,{type:"bar",data:{labels:this.uniqueComps,datasets:[{label:this.label,data:this.values,backgroundColor:"rgba(255, 99, 132, 0.2)",borderColor:"rgba(255, 99, 132, 1)",borderWidth:1}]},options:{title:{display:!0,text:this.label},responsive:!0,maintainAspectRatio:!1,scales:{yAxes:[{ticks:{beginAtZero:!0}}]}}})}}},c={template:`
  <div class="chart-container">
    <canvas ref="myChart"></canvas>
  </div>
  `,props:["uniqueComps","styleCount","templateCount","scriptCount"],data(){return{message:"Sample"}},mounted(){this.CreateComponentImportBar()},methods:{CreateComponentImportBar(){const a=this.$refs.myChart.getContext("2d"),b=new Chart(a,{type:"bar",data:{labels:this.uniqueComps,datasets:[{label:"Style",data:this.styleCount,backgroundColor:"#D6E9C6"},{label:"Template",data:this.templateCount,backgroundColor:"#FAEBCC"},{label:"Script",data:this.scriptCount,backgroundColor:"#EBCCD1"}]},options:{title:{display:!0,text:"Component Composition"},responsive:!0,maintainAspectRatio:!1,scales:{xAxes:[{stacked:!0}],yAxes:[{stacked:!0,ticks:{beginAtZero:!0}}]}}})}}};new Vue({el:"#app",template:`
  <div id="app" class="chart-container">
  <single-file-component></single-file-component>
  <div v-if="architectureData.length >0">
    <h2>Composition</h2>
    <bar-chart-stacked :uniqueComps="uniqueCompsAll" :styleCount="styleCount" :templateCount="templateCount" :scriptCount="scriptCount"/>
    <h2>Inner Workings</h2>
    <bar-chart :uniqueComps="uniqueCompsAll" :values="compImportCount" label="# of Child Components"/>
    <bar-chart :uniqueComps="uniqueCompsAll" :values="es6ImportCount" label="# of ES6 Imports"/>
    <bar-chart :uniqueComps="uniqueCompsAll" :values="uniqueCompsData" label="# Data Properties"/>
    <h2>Style</h2>
    <bar-chart :uniqueComps="uniqueCompsAll" :values="cssClassesCount" label="# CSS Classes"/>
    <bar-chart :uniqueComps="uniqueCompsAll" :values="cssIdSelectorsCount" label="# CSS ID Selectors"/>

</div>

</div>
  `,components:{SingleFileComponent:a,BarChart:b,BarChartStacked:c},data:{seen:!0,parentChildData:[],architectureData:[]},computed:{uniqueCompsAll(){return[...new Set(this.architectureData.map(a=>a.name))]},uniqueCompsDataAll(){return this.uniqueCompsAll.map(a=>this.architectureData.filter(b=>b.name===a)[0])},compImportCount(){return this.uniqueCompsDataAll.map(a=>null===a.components?0:a.components.length)},uniqueCompsData(){return this.uniqueCompsDataAll.map(a=>null===a.data?0:a.data.length)},es6ImportCount(){return this.uniqueCompsDataAll.map(a=>null===a.imports?0:a.imports.length)},templateCount(){return this.uniqueCompsDataAll.map(a=>a.templateLength)},scriptCount(){return this.uniqueCompsDataAll.map(a=>a.scriptLength)},styleCount(){return this.uniqueCompsDataAll.map(a=>a.styleLength)},cssClassesCount(){return this.uniqueCompsDataAll.map(a=>a.cssClassesCount)},cssIdSelectorsCount(){return this.uniqueCompsDataAll.map(a=>a.cssIdSelectorsCount)}},mounted(){$.getJSON("ParentChildData.json",a=>{this.parentChildData=a,$.getJSON("ComponentArchitecture.json",a=>{this.architectureData=a})})}})});